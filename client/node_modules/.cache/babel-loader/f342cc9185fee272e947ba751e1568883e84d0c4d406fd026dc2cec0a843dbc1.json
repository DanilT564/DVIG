{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';// Типы для товаров в корзине\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext(undefined);export const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};export const CartProvider=_ref=>{let{children}=_ref;const[cart,setCart]=useState([]);const[total,setTotal]=useState(0);const[totalItems,setTotalItems]=useState(0);// Загрузка корзины из localStorage при инициализации\nuseEffect(()=>{const savedCart=localStorage.getItem('cart');if(savedCart){try{const parsedCart=JSON.parse(savedCart);setCart(parsedCart);}catch(error){console.error('Ошибка при загрузке корзины:',error);}}},[]);// Сохранение корзины в localStorage при изменении\nuseEffect(()=>{localStorage.setItem('cart',JSON.stringify(cart));// Пересчитываем общую сумму и количество товаров\nconst newTotal=cart.reduce((sum,item)=>sum+item.product.price*item.quantity,0);const newTotalItems=cart.reduce((sum,item)=>sum+item.quantity,0);setTotal(newTotal);setTotalItems(newTotalItems);},[cart]);// Добавление товара в корзину\nconst addToCart=(product,quantity)=>{setCart(prevCart=>{// Проверяем, есть ли уже такой товар в корзине\nconst existingItemIndex=prevCart.findIndex(item=>item.product._id===product._id);if(existingItemIndex!==-1){// Товар уже есть в корзине, обновляем количество\nconst updatedCart=[...prevCart];const newQuantity=updatedCart[existingItemIndex].quantity+quantity;// Проверяем, не превышает ли новое количество доступное на складе\nupdatedCart[existingItemIndex].quantity=Math.min(newQuantity,product.countInStock);return updatedCart;}else{// Товара нет в корзине, добавляем новый\nreturn[...prevCart,{product,quantity:Math.min(quantity,product.countInStock)}];}});};// Удаление товара из корзины\nconst removeFromCart=productId=>{setCart(prevCart=>prevCart.filter(item=>item.product._id!==productId));};// Обновление количества товара в корзине\nconst updateQuantity=(productId,quantity)=>{if(quantity<=0){removeFromCart(productId);return;}setCart(prevCart=>{return prevCart.map(item=>{if(item.product._id===productId){// Проверяем, не превышает ли новое количество доступное на складе\nconst newQuantity=Math.min(quantity,item.product.countInStock);return{...item,quantity:newQuantity};}return item;});});};// Очистка корзины\nconst clearCart=()=>{setCart([]);};const value={cart,addToCart,removeFromCart,updateQuantity,clearCart,total,totalItems};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};export default CartContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","CartContext","undefined","useCart","context","Error","CartProvider","_ref","children","cart","setCart","total","setTotal","totalItems","setTotalItems","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","setItem","stringify","newTotal","reduce","sum","item","product","price","quantity","newTotalItems","addToCart","prevCart","existingItemIndex","findIndex","_id","updatedCart","newQuantity","Math","min","countInStock","removeFromCart","productId","filter","updateQuantity","map","clearCart","value","Provider"],"sources":["C:/Users/Данил Тимеев/Documents/GitHub/DVIG/client/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Типы для товаров в корзине\r\ninterface Product {\r\n  _id: string;\r\n  name: string;\r\n  image: string;\r\n  price: number;\r\n  countInStock: number;\r\n}\r\n\r\ninterface CartItem {\r\n  product: Product;\r\n  quantity: number;\r\n}\r\n\r\ninterface CartContextType {\r\n  cart: CartItem[];\r\n  addToCart: (product: Product, quantity: number) => void;\r\n  removeFromCart: (productId: string) => void;\r\n  updateQuantity: (productId: string, quantity: number) => void;\r\n  clearCart: () => void;\r\n  total: number;\r\n  totalItems: number;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [cart, setCart] = useState<CartItem[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n\r\n  // Загрузка корзины из localStorage при инициализации\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        setCart(parsedCart);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке корзины:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Сохранение корзины в localStorage при изменении\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    \r\n    // Пересчитываем общую сумму и количество товаров\r\n    const newTotal = cart.reduce((sum, item) => sum + item.product.price * item.quantity, 0);\r\n    const newTotalItems = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n    \r\n    setTotal(newTotal);\r\n    setTotalItems(newTotalItems);\r\n  }, [cart]);\r\n\r\n  // Добавление товара в корзину\r\n  const addToCart = (product: Product, quantity: number) => {\r\n    setCart(prevCart => {\r\n      // Проверяем, есть ли уже такой товар в корзине\r\n      const existingItemIndex = prevCart.findIndex(item => item.product._id === product._id);\r\n      \r\n      if (existingItemIndex !== -1) {\r\n        // Товар уже есть в корзине, обновляем количество\r\n        const updatedCart = [...prevCart];\r\n        const newQuantity = updatedCart[existingItemIndex].quantity + quantity;\r\n        \r\n        // Проверяем, не превышает ли новое количество доступное на складе\r\n        updatedCart[existingItemIndex].quantity = Math.min(newQuantity, product.countInStock);\r\n        \r\n        return updatedCart;\r\n      } else {\r\n        // Товара нет в корзине, добавляем новый\r\n        return [...prevCart, { product, quantity: Math.min(quantity, product.countInStock) }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Удаление товара из корзины\r\n  const removeFromCart = (productId: string) => {\r\n    setCart(prevCart => prevCart.filter(item => item.product._id !== productId));\r\n  };\r\n\r\n  // Обновление количества товара в корзине\r\n  const updateQuantity = (productId: string, quantity: number) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCart(prevCart => {\r\n      return prevCart.map(item => {\r\n        if (item.product._id === productId) {\r\n          // Проверяем, не превышает ли новое количество доступное на складе\r\n          const newQuantity = Math.min(quantity, item.product.countInStock);\r\n          return { ...item, quantity: newQuantity };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  };\r\n\r\n  // Очистка корзины\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    total,\r\n    totalItems,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\nexport default CartContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}